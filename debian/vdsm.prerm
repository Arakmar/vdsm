#!/bin/sh
# prerm script for vdsm
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <prerm> `remove'
#        * <old-prerm> `upgrade' <new-version>
#        * <new-prerm> `failed-upgrade' <old-version>
#        * <conflictor's-prerm> `remove' `in-favour' <package> <new-version>
#        * <deconfigured's-prerm> `deconfigure' `in-favour'
#          <package-being-installed> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
	remove)
        initctl stop vdsmd || :
        initctl stop supervdsmd || :

        start_conf_section="## beginning of configuration section by vdsm"
        end_conf_section="## end of configuration section by vdsm"
        by_vdsm="by vdsm"

        sed -i -e "/${start_conf_section}/,/${end_conf_section}/d" \
                    -e "/${by_vdsm}/d" \
               /etc/default/libvirt-bin \
               /etc/libvirt/libvirtd.conf \
               /etc/libvirt/qemu.conf \
               /etc/logrotate.d/libvirtd \
               /etc/sysctl.conf \
               /etc/default/sanlock

        # Restoring backuped logrotate.d/libvirtd
        sed -i -e 's/# VDSM backup//' /etc/logrotate.d/libvirtd
        saslpasswd2 -p -a libvirt -d vdsm@ovirt
    ;;

    upgrade)
    ;;

    deconfigure)
    ;;

    *)
        echo "prerm called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
