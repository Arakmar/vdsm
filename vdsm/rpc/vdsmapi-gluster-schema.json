#
# Copyright 2013 Red Hat, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301 USA
#
# Refer to the README and COPYING files for full details of the license
#

#
# VDSM GLUSTER API Schema
#

## Category: @GlusterHook ######################################################
##
# @GlusterHook:
#
# Gluster Hook API object.
#
# Since: 4.10.3
##
{'class': 'GlusterHook'}

##
# @HookLevel:
#
# Possible value of hook level.
#
# @PRE:    Before gluster command execution
#
# @POST:   After gluster command execution
#
# Since: 4.10.3
##
{'enum': 'HookLevel',
 'data': ['PRE', 'POST']}

##
# @HookStatus:
#
# Possible value of hook status.
#
# @ENABLED:  Hook is enabled
#
# @DISABLED: Hook is disabled
#
# Since: 4.10.3
##
{'enum': 'HookStatus',
 'data': ['ENABLED', 'DISABLED']}

##
# @HookInfo:
#
# Hook information.
#
# @name:      The name of the hook
#
# @status:    Status of the hook
#
# @mimetype:  Type of hook
#
# @command:   Gluster command
#
# @level:     Hook level
#
# @md5sum:    Md5sum of the hook file
#
# Since: 4.10.3
##
{'type': 'HookInfo',
 'data': {'name': 'str', 'status': 'HookStatus', 'mimetype': 'str',
          'command': 'str', 'level': 'HookLevel', 'md5sum': 'str'}}

##
# @GlusterHook.list:
#
# Provides the list of hook files
#
#
# Returns:
# List of gluster hook information
#
# Since: 4.10.3
##
{'command': {'class': 'GlusterHook', 'name': 'list'},
 'returns': ['HookInfo']}

##
# @GlusterHook.enable:
#
# Enable the hook file
#
# @glusterCmd:   Gluster command name
#
# @hookLevel:    Hook execution level
#
# @hookName:     Gluster hook name
#
# Returns:
# success or failure
#
# Since: 4.10.3
##
{'command': {'class': 'GlusterHook', 'name': 'enable'},
 'data': {'glusterCmd': 'str', 'hookLevel': 'HookLevel', 'hookName': 'str'},
 'returns': 'bool'}

##
# @GlusterHook.disable:
#
# Disable the hook file
#
# @glusterCmd:   Gluster command name
#
# @hookLevel:    Hook execution level
#
# @hookName:     Gluster hook name
#
# Returns:
# success or failure
#
# Since: 4.10.3
##
{'command': {'class': 'GlusterHook', 'name': 'disable'},
 'data': {'glusterCmd': 'str', 'hookLevel': 'HookLevel', 'hookName': 'str'},
 'returns': 'bool'}

##
# @HookContent:
#
# Hook content information.
#
# @content:   Hook content
#
# @mimetype:  Type of hook
#
# @md5sum:    Md5sum of the hook file
#
# Since: 4.10.3
##
{'type': 'HookContent',
 'data': {'content': 'str', 'mimetype': 'str', 'md5sum': 'str'}}

##
# @GlusterHook.read:
#
# Provides the hook content
#
# @glusterCmd:   Gluster command name
#
# @hookLevel:    Hook execution level
#
# @hookName:     Gluster hook name
#
# Returns:
# Hook content
#
# Since: 4.10.3
##
{'command': {'class': 'GlusterHook', 'name': 'read'},
 'data': {'glusterCmd': 'str', 'hookLevel': 'HookLevel', 'hookName': 'str'},
 'returns': 'HookContent'}

##
# @GlusterHook.update:
#
# Update the hook file
#
# @glusterCmd:   Gluster command name
#
# @hookLevel:    Hook execution level
#
# @hookName:     Gluster hook name
#
# @hookData:     Hook content
#
# @hookMd5Sum:   Md5sum of the hook file
#
# Returns:
# success or failure
#
# Since: 4.10.3
##
{'command': {'class': 'GlusterHook', 'name': 'update'},
 'data': {'glusterCmd': 'str', 'hookLevel': 'HookLevel', 'hookName': 'str',
          'hookData': 'str', 'hookMd5Sum': 'str'},
 'returns': 'bool'}

##
# @GlusterHook.add:
#
# Add a hook file
#
# @glusterCmd:   Gluster command name
#
# @hookLevel:    Hook execution level
#
# @hookName:     Gluster hook name
#
# @hookData:     Hook content
#
# @hookMd5Sum:   Md5sum of the hook file
#
# @enable:       Hook status
#
# Returns:
# success or failure
#
# Since: 4.10.3
##
{'command': {'class': 'GlusterHook', 'name': 'add'},
 'data': {'glusterCmd': 'str', 'hookLevel': 'HookLevel', 'hookName': 'str',
          'hookData': 'str', 'hookMd5Sum': 'str', 'enable': 'bool'},
 'returns': 'bool'}

##
# @GlusterHook.remove:
#
# Remove a hook file
#
# @glusterCmd:   Gluster command name
#
# @hookLevel:    Hook execution level
#
# @hookName:     Gluster hook name
#
# Returns:
# success or failure
#
# Since: 4.10.3
##
{'command': {'class': 'GlusterHook', 'name': 'remove'},
 'data': {'glusterCmd': 'str', 'hookLevel': 'HookLevel', 'hookName': 'str'},
 'returns': 'bool'}

## Category: @GlusterHost ######################################################
##
# @GlusterHost:
#
# Gluster Host API object.
#
# Since: 4.10.3
##
{'class': 'GlusterHost'}

##
# @GlusterHost.uuid:
#
# Get Gluster Host UUID
#
# Returns:
# UUID of host
#
# Since: 4.10.3
##
{'command': {'class': 'GlusterHost', 'name': 'uuid'},
 'returns': 'UUID'}

## Category: @GlusterService ######################################################
##
# @GlusterService:
#
# Gluster Service manage object.
#
# Since: 4.10.3
##
{'class': 'GlusterService'}

##
# @GlusterServiceStatus:
#
# Possible value of Gluster service status.
#
# @RUNNING:    Service is Running
#
# @STOPPED:    Service is Stopped
#
# @NOT_AVAILABLE:    Service is not Installed
#
# @NOT_SUPPORTED:    Service is not allowed to manage
#
# @ERROR:    Service action failed
#
# Since: 4.10.3
##
{'enum': 'GlusterServiceStatus',
 'data': ['RUNNING', 'STOPPED', 'NOT_AVAILABLE', 'NOT_SUPPORTED', 'ERROR']}

##
# @GlusterServiceAction:
#
# Possible value of Gluster service actions.
#
# @start:    Start the service
#
# @stop:     Stop the service
#
# @restart:  Restart the service
#
# Since: 4.10.3
##
{'enum': 'GlusterServiceAction',
 'data': ['start', 'stop', 'restart']}

##
# @GlusterServiceStatusInfo:
#
# Gluster service status information.
#
# @name:      The name of the service
#
# @status:    Status of the service
#
# @message:   Message if status is ERROR
#
# Since: 4.10.3
##
{'type': 'GlusterServiceStatusInfo',
 'data': {'name': 'str', 'status': 'GlusterServiceStatus', 'message': 'str'}}

##
# @GlusterServicesStatusInfo:
#
# Gluster services status information.
#
# @services:  List of services status information
#
# Since: 4.10.3
##
{'type': 'GlusterServicesStatusInfo',
 'data': {'services': ['GlusterServiceStatusInfo']}}

##
# @GlusterService.get:
#
# Get status information for list of services
#
# @serviceNames:   A list of Gluster service names
#
# Returns:
# Status information for list of services
#
# Since: 4.10.3
##
{'command': {'class': 'GlusterService', 'name': 'get'},
 'data': {'serviceNames': ['str']},
 'returns': 'GlusterServicesStatusInfo'}

##
# @GlusterService.action:
#
# start/stop/restart the list of services and get status information.
#
# @serviceNames:  Gluster service name
#
# @action:       Action to perform start/stop/restart
#
# Returns:
# Status information for list of services
#
# Since: 4.10.3
##
{'command': {'class': 'GlusterService', 'name': 'action'},
 'data': {'serviceNames': ['str'], 'action': 'GlusterServiceAction'},
 'returns': 'GlusterServicesStatusInfo'}


## Category: @GlusterTask ######################################################
##
# @GlusterTask:
#
# Gluster Task API object.
#
# Since: 4.10.3
##
{'class': 'GlusterTask'}

##
# @TaskSummary:
#
# Task Summary.
#
# @id:        The @UUID of the task
#
# @volumeName:      Volume name is passed
#
# @filesScanned:     Number of files scanned
#
# @filesMoved:       Number of files moved
#
# @filesFailed:      Number of files failed to move
#
# @filesSkipped:     Number of files skipped
#
# @totalSizeMoved:   Total size of the files moved
#
# @status:           Rebalance/Remove brick status
#
# Since: 4.10.3
##
{'type': 'TaskSummary',
  'data': {
        'id': 'UUID', 'volumeName': 'str', 'filesScanned': 'int',
        'filesMoved': 'int', 'filesFailed': 'int', 'filesSkipped': 'int',
        'totalSizeMoved': 'int', 'status': 'str'}}
##
# @TaskInfo:
#
# Task information.
#
# @id:        The @UUID of the task
#
# @volume:    Volume name
#
# @status:    Status of the task
#
# @type:      Type of task
#
# @data:      Task summary
#
# @bricks:    Volume Bricks
#
# Since: 4.10.3
##
{'type': 'TaskInfo',
  'data': {'id': 'UUID', 'volume': 'str', 'status': 'TaskStatus',
           'type': 'TaskType', 'data': 'TaskSummary', 'bricks': ['str']}}
##
# @GlusterTask.list:
#
# List Gluster tasks.
#
# @taskID:  #optional UUID of the Task
#
# Returns:
# List of task information
#
# Since: 4.10.3
##
{'command': {'class': 'GlusterTask', 'name': 'list'},
 'data': {'*taskID': 'UUID'},
  'returns': ['TaskInfo']}

## Category: @GlusterVolume ######################################################
##
# @GlusterVolume:
#
# Gluster Volume object.
#
# Since: 4.10.3
##
{'class': 'GlusterVolume'}

##
# @volumeType:
#
# Possible type of volume.
#
# @ENABLED:  volume is enabled
#
# @DISABLED: volume is disabled
#
# Since: 4.10.3
##
{'enum': 'volumeType',
 'data': ['ENABLED', 'DISABLED']}

##
# @volumeStatus:
#
# Possible value of volume status.
#
# @ONLINE:   volume is online
#
# @OFFLINE:  volume is offline
#
# Since: 4.10.3
##
{'enum': 'volumeStatus',
 'data': ['ONLINE', 'OFFLINE']}

##
# @VolumeProfileInfo:
#
# Volume profile information.
#
# @volumeName:  volume name
#
# @bricks:  list of bricks
#
# Since: 4.10.3
##
{'type': 'VolumeProfileInfo',
 'data': {'volumeName': 'str', 'bricks': ['str']}}

##
# @VolumeOptionInfo:
#
# Volume option information.
#
# @name:   volume option name
#
# @defaultValue:  default value
#
# @description: description
#
# Since: 4.10.3
##
{'type': 'VolumeOptionInfo',
 'data': {'name': 'str', 'defaultValue': 'str', 'description': 'str'}}

##
# @transType:
#
# Possible value of transport type.
#
# @TCP:    Transport type is TCP
#
# @RDMA:   Transport type is RDMA
#
# Since: 4.10.3
##
{'enum': 'transType',
 'data': ['TCP', 'RDMA']}

##
# @BricksInfo:
#
# Bricks information.
#
# @name:    Name of the brick
#
# @hostUuid:   Uuid of the host on which brick lies.
#
# Since: 4.14.0
##
{'type': 'BricksInfo',
 'data': {'name': 'str', 'hostUuid': 'UUID'}}


##
# @VolumeInfo:
#
# volume information.
#
# @brickCount:    The number of bricks
#
# @bricks:        List of bricks
#
# @options:       List of options
#
# @transportType: Type of transport protocol
#
# @uuid:          Id of the volume
#
# @volumeName:    Name of the volume
#
# @status:        Status of the volume
#
# @volumeType:    Type of the volume
#
# @bricksInfo:    details related to bricks(new in version 4.14.0)
#
# Since: 4.10.3
##
{'type': 'VolumeInfo',
 'data': {'brickCount': 'int', 'bricks': ['str'], 'options': ['str'],
          'transportType': 'transType', 'uuid': 'UUID', 'volumeName': 'str',
          'status': 'volumeStatus', 'volumeType': 'str',
          'bricksInfo': ['BricksInfo']}}
##
# @StatusOption:
#
# Possible value of Status option type.
#
# @DETAIL:
#
# @CLIENTS:
#
# @MEM:
#
# Since: 4.10.3
##
{'enum': 'StatusOption',
 'data': ['DETAIL', 'CLIENTS', 'MEM']}

##
# @GlusterVolume.status:
#
# Get Gluster volume status
#
# @volumeName: Gluster volume name
#
# @brick: #optional Brick name
#
# @statusOption: #optional One of the status options
#
# Returns:
# List of gluster volume statuses
#
# Since: 4.10.3
##
{'command': {'class': 'GlusterVolume', 'name': 'status'},
 'data': {'volumeName': 'str', '*brick': 'str', '*statusOption': 'StatusOption'},
 'returns': ['VolumeStatus']}

##
# @GlusterVolume.profileInfo:
#
# Get Gluster volume profileInfo
#
# @volumeName: Gluster volume name
#
# @nfs: #optional
#
# Returns:
# List of Gluster volume profile infos
#
# Since: 4.10.3
##
{'command': {'class': 'GlusterVolume', 'name': 'profileInfo'},
 'data': {'volumeName': 'str', '*nfs': 'str'},
 'returns': ['VolumeProfileInfo']}

##
# @GlusterVolume.list:
#
# Get the list of Gluster volumes
#
# @volumeName: Gluster volume name
#
# @remoteServer: #optional remote server name
#
# Returns:
# List of Gluster volumes
#
# Since: 4.17.0
##
{'command': {'class': 'GlusterVolume', 'name': 'list'},
 'data': {'volumeName': 'str', '*remoteServer': 'str'},
 'returns': ['VolumeInfo']}

##
# @GlusterVolume.create:
#
# Create a Gluster volume
#
# @volumeName: Gluster volume name
#
# @bricklist: List of bricks
#
# @replicaCount: #optional Replica count for volume
#
# @stripeCount: #optional Stripe count for volume
#
# @transportList: #optional Transport type
#
# @force: #optional Force create Volume (new in version 4.14.0)
#
# Returns:
# uuid of the volume
#
# Since: 4.10.3
##
{'command': {'class': 'GlusterVolume', 'name': 'create'},
 'data': {'volumeName': 'str', 'bricklist': ['str'],
          '*replicaCount': 'int', '*stripeCount': 'int',
          '*transportList': ['transType'], '*force': 'bool'},
 'returns': 'UUID'}

##
# @GlusterVolume.start:
#
# Start Gluster volume
#
# @volumeName: Gluster volume name
#
# @force: Start volume forcefully
#
# Returns:
# Success or failure
#
# Since: 4.10.3
##
{'command': {'class': 'GlusterVolume', 'name': 'start'},
 'data': {'volumeName': 'str', 'force': 'bool'},
 'returns': 'bool'}

##
# @GlusterVolume.stop:
#
# Stop Gluster volume
#
# @volumeName: Gluster volume name
#
# @force: Stop volume forcefully
#
# Returns:
# Success or failure
#
# Since: 4.10.3
##
{'command': {'class': 'GlusterVolume', 'name': 'stop'},
 'data': {'volumeName': 'str', 'force': 'bool'},
 'returns': 'bool'}

##
# @GlusterVolume.delete:
#
# Deletes Gluster volume
#
# @volumeName: Gluster volume name
#
# Returns:
# Success or failure
#
# Since: 4.10.3
##
{'command': {'class': 'GlusterVolume', 'name': 'delete'},
 'data': {'volumeName': 'str'},
 'returns': 'bool'}

##
# @GlusterVolume.set:
#
# Set Gluster volume options
#
# @volumeName: Gluster volume name
#
# @option: Volume set option name
#
# @value:  Value of the volume option
#
# Returns:
# Success or failure
#
# Since: 4.10.3
##
{'command': {'class': 'GlusterVolume', 'name': 'set'},
 'data': {'volumeName': 'str', 'option': 'str', 'value': 'str'},
 'returns': 'bool'}

##
# @GlusterVolume.setOptionsList:
#
# List Gluster volume options
#
# Returns:
# VolumeOptionInfo
#
# Since: 4.10.3
##
{'command': {'class': 'GlusterVolume', 'name': 'setOptionsList'},
 'returns': ['VolumeOptionInfo']}

##
# @GlusterVolume.reset:
#
# Reset Gluster volume options
#
# @volumeName: Gluster volume name
#
# @option: Volume option
#
# @force: Reset volume options forcefully
#
# Returns:
# Success or failure
#
# Since: 4.10.3
##
{'command': {'class': 'GlusterVolume', 'name': 'reset'},
 'data': {'volumeName': 'str', 'option': 'str', 'force': 'bool'},
 'returns': 'bool'}

##
# @GlusterVolume.addBrick:
#
# Add Gluster volume brick
#
# @volumeName: Gluster volume name
#
# @brickList: List of bricks
#
# @replicaCount: #optional Replica count of the volume
#
# @stripeCount: #optional Stripe count of the volume
#
# @force: #optional Force add brick (new in version 4.14.0)
#
# Returns:
# Success or failure
#
# Since: 4.10.3
##
{'command': {'class': 'GlusterVolume', 'name': 'addBrick'},
 'data': {'volumeName': 'str', 'brickList': ['str'],
          '*replicaCount': 'int', '*stripeCount': 'int',
          '*force': 'bool'},
 'returns': 'bool'}

##
# @GlusterVolume.removeBrickStart:
#
# Start Gluster volume brick remove
#
# @volumeName: Gluster volume name
#
# @brickList: List of bricks
#
# @replicaCount: Volume replica count
#
# Returns:
# Task id of the operation
#
# Since: 4.10.3
##
{'command': {'class': 'GlusterVolume', 'name': 'removeBrickStart'},
 'data': {'volumeName': 'str', 'brickList': ['str'], 'replicaCount': 'int'},
 'returns': 'UUID'}

##
# @Summary:
#
# Summary of the process
#
# @runtime:        Runtime of the operation
#
# @filesScanned:   Number of files scanned
#
# @filesMoved:     Number of files moved
#
# @filesFailed:    Number of files failed
#
# @filesSkipped:   Numbers of files skipped
#
# @totalSizeMoved: Total size of data moved
#
# @status:         Status of the operation
#
# Since: 4.10.3
##
{'type': 'Summary',
 'data': {'runtime': 'float', 'filesScanned': 'int', 'filesMoved': 'int',
          'filesFailed': 'int', 'filesSkipped': 'int', 'totalSizeMoved': 'int',
          'status': 'str'}}

##
# @GlusterVolume.removeBrickStop:
#
# Stop Gluster volume brick remove
#
# @volumeName: Gluster volume name
#
# @brickList: List of bricks
#
# @replicaCount: Volume replica count
#
# Returns:
# Status information of remove brick operation
#
# Since: 4.10.3
##
{'command': {'class': 'GlusterVolume', 'name': 'removeBrickStop'},
 'data': {'volumeName': 'str', 'brickList': ['str'], 'replicaCount': 'int'},
 'returns': 'RebalanceRemoveStatus'}

##
# @TaskStatus:
#
# Possible value of task status.
#
# @NOT_STARTED: Process not Started
#
# @STARTED:     Process Started
#
# @STOPPED:     Process not Stopped
#
# @COMPLETED:   Process completed
#
# @FAILED:      Process failed
#
# @UNKNOWN:     Status unknown
#
# Since: 4.10.3
##
{'enum': 'TaskStatus',
 'data': ['NOT_STARTED', 'STARTED','STOPPED', 'COMPLETED', 'FAILED',
          'UNKNOWN']}

##
# @HostInfo:
#
# Info about Host
#
# @name:           Name of the host
#
# @id:             id of the host
#
# @runtime:        Runtime of the operation
#
# @filesScanned:   Number of files scanned
#
# @filesMoved:     Number of files moved
#
# @filesFailed:    Number of files failed
#
# @filesSkipped:   Numbers of files skipped
#
# @totalSizeMoved: Total size of data moved
#
# @status:         Status of task
#
# Since: 4.10.3
##
{'type': 'HostInfo',
 'data': {'name': 'str', 'id': 'UUID', 'runtime': 'float',
          'filesScanned': 'int', 'filesMoved': 'int', 'filesFailed': 'int',
          'filesSkipped': 'int', 'totalSizeMoved': 'int',
          'status': 'TaskStatus'}}

##
# @RebalanceRemoveStatus:
#
# status of volume rebalance and brick removal.
#
# @hosts:      Information about hosts.
#
# @summary:    Summary of the operation.
#
# Since: 4.10.3
##
{'type': 'RebalanceRemoveStatus',
 'data': {'hosts': 'HostInfo', 'summary': 'Summary'}}

##
# @GlusterVolume.removeBrickStatus:
#
# Get status of Gluster volume brick remove
#
# @volumeName: Gluster volume name
#
# @brickList: List of bricks
#
# @replicaCount: #optional Replica count of the volume
#
# Returns:
# Status information of remove brick operation
#
# Since: 4.10.3
##
{'command': {'class': 'GlusterVolume', 'name': 'removeBrickStatus'},
 'data': {'volumeName': 'str', 'brickList': ['str'], '*replicaCount': 'int'},
 'returns': 'RebalanceRemoveStatus'}

##
# @GlusterVolume.removeBrickCommit:
#
# Commit Gluster volume brick remove
#
# @volumeName: Gluster volume name
#
# @brickList: List of bricks
#
# @replicaCount: Volume replica count
#
# Returns:
# Success or failure
#
# Since: 4.10.3
##
{'command': {'class': 'GlusterVolume', 'name': 'removeBrickCommit'},
 'data': {'volumeName': 'str', 'brickList': ['str'], 'replicaCount': 'int'},
 'returns': 'bool'}

##
# @GlusterVolume.removeBrickForce:
#
# Force remove Gluster volume brick
#
# @volumeName: Gluster volume name
#
# @brickList: List of bricks
#
# @replicaCount: Volume replica count
#
# Returns:
# Success or failure
#
# Since: 4.10.3
##
{'command': {'class': 'GlusterVolume', 'name': 'removeBrickForce'},
 'data': {'volumeName': 'str', 'brickList': ['str'], 'replicaCount': 'int'},
 'returns': 'bool'}

##
# @GlusterVolume.profileStart:
#
# Start Gluster volume Profile
#
# @volumeName: Gluster volume name
#
# Returns:
# Success or failure
#
# Since: 4.10.3
##
{'command': {'class': 'GlusterVolume', 'name': 'profileStart'},
 'data': {'volumeName': 'str'},
 'returns': 'bool'}

##
# @GlusterVolume.profileStop:
#
# Stop Gluster volume Profile
#
# @volumeName: Gluster volume name
#
# Returns:
# Success or failure
#
# Since: 4.10.3
##
{'command': {'class': 'GlusterVolume', 'name': 'profileStop'},
 'data': {'volumeName': 'str'},
 'returns': 'bool'}

##
# @GlusterVolume.rebalanceStart:
#
# Start Gluster volume rebalance
#
# @volumeName: Gluster volume name
#
# @rebalanceType: Rebalance type
#
# @force: Start rebalance forcefully
#
# Returns:
# Task id of the operation
#
# Since: 4.10.3
##
{'command': {'class': 'GlusterVolume', 'name': 'rebalanceStart'},
 'data': {'volumeName': 'str', 'rebalanceType': 'str', 'force': 'bool'},
 'returns': 'UUID'}

##
# @GlusterVolume.rebalanceStop:
#
# Stop Gluster volume rebalance
#
# @volumeName: Gluster volume name
#
# @force: #optional Force flag
#
# Returns:
# Gluster volume rebalance status
#
# Since: 4.10.3
##
{'command': {'class': 'GlusterVolume', 'name': 'rebalanceStop'},
 'data': {'volumeName': 'str', '*force': 'bool'},
 'returns': 'RebalanceRemoveStatus'}

##
# @GlusterVolume.replaceBrickStart:
#
# Replace Gluster volume start
#
# @volumeName: Gluster volume name
#
# @existingBrick: Existing brick
#
# @newBrick: New brick
#
# Returns:
# Success or failure
#
# Since: 4.10.3
##
{'command': {'class': 'GlusterVolume', 'name': 'replaceBrickStart'},
 'data': {'volumeName': 'str', 'existingBrick': 'str', 'newBrick': 'str'},
 'returns': 'bool'}

##
# @GlusterVolume.rebalanceStatus:
#
# Get Gluster volume Rebalance status
#
# @volumeName: Gluster volume name
#
# Returns:
# Gluster volume rebalance status
#
# Since: 4.10.3
##
{'command': {'class': 'GlusterVolume', 'name': 'rebalanceStatus'},
 'data': {'volumeName': 'str'},
 'returns': 'RebalanceRemoveStatus'}

##
# @GlusterHost.add:
#
# Add Gluster Host
#
# @hostName:    Host name
#
# Returns:
# Success or Failure
#
# Since: 4.10.3
##
{'command': {'class': 'GlusterHost', 'name': 'add'},
 'data': {'hostName': 'str'},
 'returns': 'bool'}

##
# @GlusterHost.remove:
#
# Remove Gluster Host
#
# @hostName:     host name
#
# @force:        forcefull removal
#
# Returns:
# Success or failure
#
# Since: 4.10.3
##
{'command': {'class': 'GlusterHost', 'name': 'remove'},
 'data': {'hostName': 'str', 'force': 'bool'},
 'returns': 'bool'}

##
# @GlusterHost.removeByUuid:
#
# Remove Gluster Host by uuid
#
# @hostUuid:   host uuid
#
# @force:      remove host forcefully
#
# Returns:
# Success or failure
#
# Since: 4.14.0
##
{'command': {'class': 'GlusterHost', 'name': 'removeByUuid'},
 'data': {'hostUuid': 'UUID', 'force': 'bool'},
 'returns': 'bool'}

##
# @HostStatus:
#
# Possible value of host status.
#
# @UNKNOWN:  Host status is unknown
#
# @CONNECTED: Host is connected
#
# @DISCONNECTED: host is disconnected
#
# Since: 4.10.3
##
{'enum': 'HostStatus',
 'data': ['UNKNOWN', 'CONNECTED','DISCONNECTED']}

##
# @HostList:
#
# List of hosts.
#
# @hostname:  The name of the host
#
# @uuid:      Id of the host
#
# @status:    Status of the host
#
# Since: 4.10.3
##
{'type': 'HostList',
 'data': {'hostname': 'str', 'uuid': 'UUID', 'status': 'HostStatus'}}

##
# @GlusterHost.list:
#
# List Gluster Hosts
#
# Returns:
# List of gluster host
#
# Since: 4.10.3
##
{'command': {'class': 'GlusterHost', 'name': 'list'},
 'returns': ['HostList']}

##
# @StorageDevicesList:
#
# List of storage devices.
#
# @name:       The name of the device
#
# @size:       Device size
#
# @devPath:    Device path
#
# devUuid:     Device uuid
#
# bus:         Device bus
#
# model:       Device Model
#
# fsType:      File system type
#
# mountPoint:  Device mount point path
#
# uuid:        File system uuid
#
# createBrick: Has the device can be used for create brick or not
#
# Since: 4.17.0
##
{'type': 'StorageDevicesList':
 'data': {'name': 'str', 'size': 'int', 'devPath': 'str', 'devUuid': 'UUID',
          'bus': 'str', 'model': 'str', 'fsType': 'str', 'mountPoint': 'str',
          'uuid': 'UUID', 'createBrick': 'bool'}}

##
# @GlusterHost.storageDevicesList:
#
# List Gluster Storage Devices List
#
# Returns:
# List of gluster storage devices list
#
# Since: 4.17.0
##
{'command': {'class': 'GlusterHost', 'name': 'storageDevicesList'},
 'returns': ['StorageDevicesList']}

##
# @GlusterVolumeStatsInfo:
#
# Gluster Volumes disk usage statistics
#
# @sizeTotal: Total space available in bytes
#
# @sizeFree: Free space available in bytes
#
# @sizeUsed: Used space in bytes
#
# Since: 4.15.0
##
{'type': 'GlusterVolumeStatsInfo',
 'data': {'sizeTotal': 'str', 'sizeFree': 'str', 'sizeUsed': 'str'}}


##
# @GlusterVolume.statsInfoGet:
#
# Get the size info of gluster volume
#
# @volumeName: Gluster volume name
#
# Returns:
# Stats info of GlusterFS volume
#
# Since: 4.15.0
##
{'command': {'class': 'GlusterVolume', 'name': 'statsInfoGet'},
 'data': {'volumeName': 'str'},
 'returns': 'GlusterVolumeStatsInfo'}

##
# @GlusterVolume.geoRepSessionStart:
#
# Starts the Geo Replication session
#
# @volumeName: Is an existing volume name in the master node
#
# @remoteHost: Is remote slave host name or ip
#
# @remoteVolumeName: Is an available existing volume name in the slave node
#
# @force: For starting a geo-replication session forcefully
#
# Returns:
# True if session is successfully started
#
# Since: 4.17.0
##
{'command': {'class': 'GlusterVolume', 'name': 'geoRepSessionStart'},
 'data': {'volumeName': 'str', 'remoteHost': 'str', 'remoteVolumeName': 'str', 'force': 'bool'},
 'returns': 'bool'}

##
# @GlusterVolume.geoRepSessionStop:
#
# Stops the Geo Replication session
#
# @volumeName: Is an existing volume name in the master node
#
# @remoteHost: Is remote slave host name or ip
#
# @remoteVolumeName: Is an available existing volume name in the slave node
#
# @force: For stoping a georeplication session forcefully
#
# Returns:
# True if session is successfully stopped
#
# Since: 4.17.0
##
{'command': {'class': 'GlusterVolume', 'name': 'geoRepSessionStop'},
 'data': {'volumeName': 'str', 'remoteHost': 'str', 'remoteVolumeName': 'str', 'force': 'bool'},
 'returns': 'bool'}
